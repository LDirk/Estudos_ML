# -*- coding: utf-8 -*-
"""Modelo_decisionTree

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mpmzExf4Wcz_Y5THCEene34aPhlqocbf
"""

import pandas as pd
import numpy as np

dados_treino = pd.read_csv("/content/dadostreino_limpo.csv")


x = dados_treino[
                 ["util_linhas_inseguras",
                 "idade",
                 "vezes_passou_de_30_59_dias",
                 "razao_debito",
                 "salario_mensal",
                 "numero_linhas_crdto_aberto",
                 "numero_vezes_passou_90_dias",
                 "numero_emprestimos_imobiliarios",
                 "numero_de_vezes_que_passou_60_89_dias",
                 "numero_de_dependentes"]
                 ]

y = dados_treino[["inadimplente"]]

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

SEED = 5
np.random.seed(SEED)
raw_treino_x, raw_teste_x, treino_y, teste_y = train_test_split(x, y, test_size = 0.25, stratify = y)

print("Treinaremos com %d elementos e testaremos com %d elementos" % (len(raw_treino_x), len(raw_teste_x)))

# max_depth dita a profundidade da arvore
modelo = DecisionTreeClassifier(max_depth=2)
modelo.fit(raw_treino_x, treino_y)
previsoes = modelo.predict(raw_teste_x)

acuracia = accuracy_score(teste_y, previsoes) * 100
print("A acurácia foi %.2f%%" % acuracia)

# predição dadostreino

dados_teste = pd.read_csv("/content/dadosteste_limpo.csv")

x_teste = dados_teste[
                 ["util_linhas_inseguras",
                 "idade",
                 "vezes_passou_de_30_59_dias",
                 "razao_debito",
                 "salario_mensal",
                 "numero_linhas_crdto_aberto",
                 "numero_vezes_passou_90_dias",
                 "numero_emprestimos_imobiliarios",
                 "numero_de_vezes_que_passou_60_89_dias",
                 "numero_de_dependentes"]
                 ]

previsoes = modelo.predict(x_teste)
previsoes

dados_teste["inadimplente"] = previsoes

dados_teste.to_csv('dados_teste_inadi_file.csv')

dados_teste